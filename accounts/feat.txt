

class SignupSerializer(serializers.ModelSerializer):

    password = serializers.CharField(write_only=True)
    password2 = serializers.CharField(write_only=True)
    
    class Meta:
        model = User
        fields = ('username', 'email', 'password', 'password2')
        
    def validate(self, data):
        """
        Password validation method
        - Checks if passwords match
        - Ensures password meets minimum requirements
        """
        # 1. 비밀번호 일치 여부 검사
        if data['password'] != data['password2']:
            raise serializers.ValidationError({
                "password": "비밀번호가 일치하지 않습니다."
            })
        
        # 2. 비밀번호 강도 검사
        try:
            validate_password(data['password'])  # Django 내장 함수로 강도 검사
        except Exception as e:
            raise serializers.ValidationError({
                "password": list(e.messages)  # 에러 메시지 반환
            })
        
        # 3. 유효성 검사 후 데이터 반환
        return data  # 유효성 검사를 통과한 데이터를 반환

    def create(self, validated_data):
        # password2 필드 제거 (사용되지 않음)
        validated_data.pop("password2")
        
        # 사용자 객체 생성 (password는 이미 해싱 처리됨)
        return User.objects.create_user(**validated_data)
